[
    {
        "id": "4bb5c18b84005d68",
        "type": "tab",
        "label": "Gitub Service hook",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ea9d5deb5c8d6fb",
        "type": "global-config",
        "name": "global-config",
        "env": []
    },
    {
        "id": "0be306c0dba3119c",
        "type": "http in",
        "z": "4bb5c18b84005d68",
        "name": "",
        "url": "/trigger/*",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 180,
        "wires": [
            [
                "f6a089351b5be6cf"
            ]
        ]
    },
    {
        "id": "f6a089351b5be6cf",
        "type": "function",
        "z": "4bb5c18b84005d68",
        "name": "Process payload",
        "func": "\nvar url = msg.req.url.split('/');\n\nif (url.length > 2) {\n\n    var originalPayload = msg.payload;\n\n    if (originalPayload == null) {\n            msg.payload = {\n            message: \"Request malformed. Payload must not be null.\",\n            statusCode: 422\n        };\n        msg.statusCode = 422;\n        return msg;\n    }\n\n    if (Object.keys(originalPayload).length != 13 ) {\n            msg.payload = {\n            message: \"Request malformed. Expected 13 keys payload.\",\n            statusCode: 422\n        };\n        msg.statusCode = 422;\n        return msg;\n    }\n\n    if (originalPayload.hasOwnProperty('compare')) {\n        delete originalPayload.compare;\n    }\n\n    if (originalPayload.hasOwnProperty('pusher')) {\n        delete originalPayload.pusher;\n    }\n\n    if (originalPayload.hasOwnProperty('base_ref')) {\n        delete originalPayload.base_ref;\n    } \n\n    var githubPost = {\n        \"event_type\": url[2],\n        \"client_payload\": originalPayload\n    };\n    msg.payload = githubPost;\n    msg.statusCode = 200;\n    return msg;\n\n}else{\n    msg.payload = {\n        message: \"Request malformed. Use /trigger/event_type\",\n        statusCode: 422\n    };\n    msg.statusCode = 422;\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 180,
        "wires": [
            [
                "dab07d60d012c7ea"
            ]
        ]
    },
    {
        "id": "c374a6809a1d429c",
        "type": "http response",
        "z": "4bb5c18b84005d68",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 280,
        "wires": []
    },
    {
        "id": "e443db0f3b461314",
        "type": "function",
        "z": "4bb5c18b84005d68",
        "name": "Response",
        "func": "msg.payload = {\n    message: \"Content accepted.\",\n    statusCode: 200\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 120,
        "wires": [
            [
                "c374a6809a1d429c"
            ]
        ]
    },
    {
        "id": "19c3d8c86d4486a5",
        "type": "http request",
        "z": "4bb5c18b84005d68",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "${GH_REMOTE_ADDR}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Accept",
                "valueType": "other",
                "valueValue": "application/vnd.github+json"
            }
        ],
        "x": 670,
        "y": 120,
        "wires": [
            [
                "e443db0f3b461314"
            ]
        ]
    },
    {
        "id": "a3a53d9e238639d7",
        "type": "http in",
        "z": "4bb5c18b84005d68",
        "name": "",
        "url": "/trigger*",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "cfbb496a8af36d8d"
            ]
        ]
    },
    {
        "id": "cfbb496a8af36d8d",
        "type": "function",
        "z": "4bb5c18b84005d68",
        "name": "Response",
        "func": "msg.payload = {\n    message: \"Method not allowed. Use POST instead.\",\n    statusCode: 422\n};\nmsg.statusCode = 422;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 380,
        "wires": [
            [
                "c374a6809a1d429c"
            ]
        ]
    },
    {
        "id": "dab07d60d012c7ea",
        "type": "switch",
        "z": "4bb5c18b84005d68",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "gte",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 180,
        "wires": [
            [
                "19c3d8c86d4486a5"
            ],
            [
                "c374a6809a1d429c"
            ]
        ]
    }
]